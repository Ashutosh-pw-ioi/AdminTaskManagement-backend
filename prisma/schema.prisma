generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

model Admin {
  id          String   @id @default(uuid())
  name      String
  email       String   @unique
  password    String
  gender      String
  phoneNumber String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  defaultTasks DefaultTask[]
  newTasks     NewTask[]

  @@map("admin")
}

model OperationTeamMember {
  id                 String   @id @default(uuid())
  name               String
  email              String   @unique
  password           String
  phoneNumber        String
  createdAt          DateTime @default(now())
  taskAssignedTotal  Int      @default(0)
  taskCompletedTotal Int      @default(0)

  assignedNewTasks   NewTask[]           @relation("NewTaskOperators")
  assignedDailyTasks DailyTaskInstance[] @relation("DailyTaskOperators")

  @@map("operation")
}

model DefaultTask {
  id          String   @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  adminId        String
  admin          Admin               @relation(fields: [adminId], references: [id])
  dailyInstances DailyTaskInstance[]

  @@map("default_tasks")
}

model DailyTaskInstance {
  id          String     @id @default(uuid())
  taskDate    DateTime
  isCompleted Boolean    @default(false)
  priority    Priority   @default(LOW)
  status      TaskStatus @default(PENDING)

  defaultTaskId String
  defaultTask   DefaultTask @relation(fields: [defaultTaskId], references: [id], onDelete: Cascade)

  operators OperationTeamMember[] @relation("DailyTaskOperators")

  @@unique([taskDate, defaultTaskId])
  @@map("daily_task_instances")
}

model NewTask {
  id           String     @id @default(uuid())
  title        String
  description  String?
  assignedDate DateTime   @default(now())
  dueDate      DateTime?
  isCompleted  Boolean    @default(false)
  priority     Priority   @default(LOW)
  status       TaskStatus @default(PENDING)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  adminId String
  admin   Admin  @relation(fields: [adminId], references: [id])

  operators OperationTeamMember[] @relation("NewTaskOperators")

  @@map("new_tasks")
}
